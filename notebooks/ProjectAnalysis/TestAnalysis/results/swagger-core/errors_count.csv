error,count
"&quot;{&quot;type&quot;:&quot;string&quot;[,&quot;type&quot;:&quot;string&quot;]}&quot; was not equal to &quot;{&quot;type&quot;:&quot;string&quot;[]}&quot;",1
"&quot;{&quot;type&quot;:&quot;[DateTimeProperty&quot;,&quot;type&quot;:&quot;]string&quot;,&quot;format&quot;:&quot;da...&quot; was not equal to &quot;{&quot;type&quot;:&quot;[]string&quot;,&quot;format&quot;:&quot;da...&quot;",1
"&quot;{&quot;type&quot;:&quot;integer&quot;,&quot;[type&quot;:&quot;integer&quot;,&quot;]format&quot;:&quot;int32&quot;}&quot; was not equal to &quot;{&quot;type&quot;:&quot;integer&quot;,&quot;[]format&quot;:&quot;int32&quot;}&quot;",1
"&quot;{&quot;type&quot;:&quot;boolean&quot;[,&quot;type&quot;:&quot;boolean&quot;]}&quot; was not equal to &quot;{&quot;type&quot;:&quot;boolean&quot;[]}&quot;",1
"&quot;{&quot;type&quot;:&quot;array&quot;,&quot;[type&quot;:&quot;array&quot;,&quot;items&quot;:{&quot;type&quot;:&quot;string&quot;,]&quot;type&quot;:&quot;string&quot;}}&quot; was not equal to &quot;{&quot;type&quot;:&quot;array&quot;,&quot;[items&quot;:{]&quot;type&quot;:&quot;string&quot;}}&quot;",1
"&quot;{&quot;type&quot;:&quot;array&quot;,&quot;[type&quot;:&quot;array&quot;,&quot;items&quot;:{&quot;type&quot;:&quot;integer&quot;,]&quot;type&quot;:&quot;integer&quot;,&quot;fo...&quot; was not equal to &quot;{&quot;type&quot;:&quot;array&quot;,&quot;[items&quot;:{]&quot;type&quot;:&quot;integer&quot;,&quot;fo...&quot;",1
"&quot;...perties&quot; : {       &quot;[type&quot; : {         &quot;type&quot; : &quot;string&quot;       },       &quot;isDomestic&quot; : {         &quot;type&quot; : &quot;boolean&quot;       },       &quot;name&quot; : {         &quot;type&quot; : &quot;string]&quot;       }     }   } ...&quot; did not equal &quot;...perties&quot; : {       &quot;[name&quot; : {         &quot;type&quot; : &quot;string&quot;       },       &quot;type&quot; : {         &quot;type&quot; : &quot;string&quot;       },       &quot;isDomestic&quot; : {         &quot;type&quot; : &quot;boolean]&quot;       }     }   } ...&quot;",12
"&quot;...32&quot;       },       &quot;[type&quot; : {         &quot;type&quot; : &quot;string&quot;       },       &quot;isDomestic&quot; : {         &quot;type&quot; : &quot;boolean&quot;       },       &quot;name&quot; : {         &quot;type&quot; : &quot;string]&quot;       }     }   } ...&quot; did not equal &quot;...32&quot;       },       &quot;[name&quot; : {         &quot;type&quot; : &quot;string&quot;       },       &quot;type&quot; : {         &quot;type&quot; : &quot;string&quot;       },       &quot;isDomestic&quot; : {         &quot;type&quot; : &quot;boolean]&quot;       }     }   } ...&quot;",6
"&quot;{&quot;[ComplexModel&quot;:{&quot;properties&quot;:{&quot;name&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;age&quot;:{&quot;type&quot;:&quot;integer&quot;,&quot;format&quot;:&quot;int32&quot;}}},&quot;NestedModel&quot;:{&quot;properties&quot;:{&quot;complexModel&quot;:{&quot;$ref&quot;:&quot;ComplexModel&quot;},&quot;localtime&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;format&quot;:&quot;date-time]&quot;}}}}&quot; did not equal &quot;{&quot;[NestedModel&quot;:{&quot;properties&quot;:{&quot;complexModel&quot;:{&quot;$ref&quot;:&quot;ComplexModel&quot;},&quot;localtime&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;format&quot;:&quot;date-time&quot;}}},&quot;ComplexModel&quot;:{&quot;properties&quot;:{&quot;name&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;age&quot;:{&quot;type&quot;:&quot;integer&quot;,&quot;format&quot;:&quot;int32]&quot;}}}}&quot;",1
"&quot;...perties&quot; : {       &quot;[type&quot; : {         &quot;type&quot; : &quot;string&quot;       },       &quot;nam]e&quot; : {         &quot;type...&quot; did not equal &quot;...perties&quot; : {       &quot;[name&quot; : {         &quot;type&quot; : &quot;string&quot;       },       &quot;typ]e&quot; : {         &quot;type...&quot;",64
"&quot;...32&quot;       },       &quot;[type&quot; : {         &quot;type&quot; : &quot;string&quot;       },       &quot;nam]e&quot; : {         &quot;type...&quot; did not equal &quot;...32&quot;       },       &quot;[name&quot; : {         &quot;type&quot; : &quot;string&quot;       },       &quot;typ]e&quot; : {         &quot;type...&quot;",2
"&quot;...perties&quot; : {       &quot;[type&quot; : {         &quot;type&quot; : &quot;string&quot;       },       &quot;name&quot; : {         &quot;type&quot; : &quot;string&quot;,         &quot;description&quot; : &quot;The name of the human]&quot;       }     },    ...&quot; did not equal &quot;...perties&quot; : {       &quot;[name&quot; : {         &quot;type&quot; : &quot;string&quot;,         &quot;description&quot; : &quot;The name of the human&quot;       },       &quot;type&quot; : {         &quot;type&quot; : &quot;string]&quot;       }     },    ...&quot;",4
"&quot;...perties&quot; : {       &quot;[isDomestic&quot; : {         &quot;type&quot; : &quot;boolean&quot;       },       &quot;type&quot; : {         &quot;type&quot; : &quot;string&quot;       },       &quot;name&quot; : {         &quot;type&quot; : &quot;string]&quot;       }     }   } ...&quot; did not equal &quot;...perties&quot; : {       &quot;[name&quot; : {         &quot;type&quot; : &quot;string&quot;       },       &quot;type&quot; : {         &quot;type&quot; : &quot;string&quot;       },       &quot;isDomestic&quot; : {         &quot;type&quot; : &quot;boolean]&quot;       }     }   } ...&quot;",2
"&quot;...32&quot;       },       &quot;[isDomestic&quot; : {         &quot;type&quot; : &quot;boolean&quot;       },       &quot;type&quot; : {         &quot;type&quot; : &quot;string&quot;       },       &quot;name&quot; : {         &quot;type&quot; : &quot;string]&quot;       }     }   } ...&quot; did not equal &quot;...32&quot;       },       &quot;[name&quot; : {         &quot;type&quot; : &quot;string&quot;       },       &quot;type&quot; : {         &quot;type&quot; : &quot;string&quot;       },       &quot;isDomestic&quot; : {         &quot;type&quot; : &quot;boolean]&quot;       }     }   } ...&quot;",1
"&quot;...    &quot;required&quot; : [ &quot;[type&quot;, &quot;isDomestic&quot;, &quot;name&quot; ],     &quot;properties&quot; : {       &quot;type&quot; : {         &quot;type&quot; : &quot;string&quot;,         &quot;position&quot; : 1,         &quot;description&quot; : &quot;The pet type&quot;       },       &quot;isDomestic&quot; : {         &quot;type&quot; : &quot;boolean&quot;,         &quot;position&quot; : 3       },       &quot;name&quot; : {         &quot;type&quot; : &quot;string&quot;,         &quot;position&quot; : 2,         &quot;description&quot; : &quot;The name of the pet&quot;]       }     }   } }&quot; did not equal &quot;...    &quot;required&quot; : [ &quot;[name&quot;, &quot;type&quot;, &quot;isDomestic&quot; ],     &quot;properties&quot; : {       &quot;name&quot; : {         &quot;type&quot; : &quot;string&quot;,         &quot;position&quot; : 2,         &quot;description&quot; : &quot;The name of the pet&quot;       },       &quot;type&quot; : {         &quot;type&quot; : &quot;string&quot;,         &quot;position&quot; : 1,         &quot;description&quot; : &quot;The pet type&quot;       },       &quot;isDomestic&quot; : {         &quot;type&quot; : &quot;boolean&quot;,         &quot;position&quot; : 3]       }     }   } }&quot;",4
"&quot;...    &quot;required&quot; : [ &quot;[type&quot;, &quot;isDomestic&quot;, &quot;name&quot; ],     &quot;properties&quot; : {       &quot;clawCount&quot; : {         &quot;type&quot; : &quot;integer&quot;,         &quot;format&quot; : &quot;int32&quot;       },       &quot;type&quot; : {         &quot;type&quot; : &quot;string&quot;,         &quot;position&quot; : 1,         &quot;description&quot; : &quot;The pet type&quot;       },       &quot;isDomestic&quot; : {         &quot;type&quot; : &quot;boolean&quot;,         &quot;position&quot; : 3       },       &quot;name&quot; : {         &quot;type&quot; : &quot;string&quot;,         &quot;position&quot; : 2,         &quot;description&quot; : &quot;The name of the pet&quot;]       }     }   } }&quot; did not equal &quot;...    &quot;required&quot; : [ &quot;[name&quot;, &quot;type&quot;, &quot;isDomestic&quot; ],     &quot;properties&quot; : {       &quot;clawCount&quot; : {         &quot;type&quot; : &quot;integer&quot;,         &quot;format&quot; : &quot;int32&quot;       },       &quot;name&quot; : {         &quot;type&quot; : &quot;string&quot;,         &quot;position&quot; : 2,         &quot;description&quot; : &quot;The name of the pet&quot;       },       &quot;type&quot; : {         &quot;type&quot; : &quot;string&quot;,         &quot;position&quot; : 1,         &quot;description&quot; : &quot;The pet type&quot;       },       &quot;isDomestic&quot; : {         &quot;type&quot; : &quot;boolean&quot;,         &quot;position&quot; : 3]       }     }   } }&quot;",2
"&quot;...    &quot;required&quot; : [ &quot;[type&quot;, &quot;name&quot; ],     &quot;properties&quot; : {       &quot;type&quot; : {         &quot;type&quot; : &quot;string&quot;,         &quot;position&quot; : 2,         &quot;description&quot; : &quot;The animal type&quot;       },       &quot;name&quot; : {         &quot;type&quot; : &quot;string&quot;,         &quot;position&quot; : 1,         &quot;description&quot; : &quot;The name of the animal]&quot;       }     },    ...&quot; did not equal &quot;...    &quot;required&quot; : [ &quot;[name&quot;, &quot;type&quot; ],     &quot;properties&quot; : {       &quot;name&quot; : {         &quot;type&quot; : &quot;string&quot;,         &quot;position&quot; : 1,         &quot;description&quot; : &quot;The name of the animal&quot;       },       &quot;type&quot; : {         &quot;type&quot; : &quot;string&quot;,         &quot;position&quot; : 2,         &quot;description&quot; : &quot;The animal type]&quot;       }     },    ...&quot;",3
"&quot;...    &quot;required&quot; : [ &quot;[type&quot;, &quot;name&quot;, &quot;isDomestic&quot; ],     &quot;properties&quot; : {       &quot;type&quot; : {         &quot;type&quot; : &quot;string&quot;,         &quot;position&quot; : 1,         &quot;description&quot; : &quot;The pet type&quot;       },       &quot;name&quot; : {         &quot;type&quot; : &quot;string&quot;,         &quot;position&quot; : 2,         &quot;description&quot; : &quot;The name of the pet]&quot;       },       &quot;is...&quot; did not equal &quot;...    &quot;required&quot; : [ &quot;[name&quot;, &quot;type&quot;, &quot;isDomestic&quot; ],     &quot;properties&quot; : {       &quot;name&quot; : {         &quot;type&quot; : &quot;string&quot;,         &quot;position&quot; : 2,         &quot;description&quot; : &quot;The name of the pet&quot;       },       &quot;type&quot; : {         &quot;type&quot; : &quot;string&quot;,         &quot;position&quot; : 1,         &quot;description&quot; : &quot;The pet type]&quot;       },       &quot;is...&quot;",4
"&quot;...    &quot;required&quot; : [ &quot;[type&quot;, &quot;name&quot;, &quot;isDomestic&quot; ],     &quot;properties&quot; : {       &quot;clawCount&quot; : {         &quot;type&quot; : &quot;integer&quot;,         &quot;format&quot; : &quot;int32&quot;       },       &quot;type&quot; : {         &quot;type&quot; : &quot;string&quot;,         &quot;position&quot; : 1,         &quot;description&quot; : &quot;The pet type&quot;       },       &quot;name&quot; : {         &quot;type&quot; : &quot;string&quot;,         &quot;position&quot; : 2,         &quot;description&quot; : &quot;The name of the pet]&quot;       },       &quot;is...&quot; did not equal &quot;...    &quot;required&quot; : [ &quot;[name&quot;, &quot;type&quot;, &quot;isDomestic&quot; ],     &quot;properties&quot; : {       &quot;clawCount&quot; : {         &quot;type&quot; : &quot;integer&quot;,         &quot;format&quot; : &quot;int32&quot;       },       &quot;name&quot; : {         &quot;type&quot; : &quot;string&quot;,         &quot;position&quot; : 2,         &quot;description&quot; : &quot;The name of the pet&quot;       },       &quot;type&quot; : {         &quot;type&quot; : &quot;string&quot;,         &quot;position&quot; : 1,         &quot;description&quot; : &quot;The pet type]&quot;       },       &quot;is...&quot;",2
"&quot;...on&quot;:{&quot;properties&quot;:{&quot;[double&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;format&quot;:&quot;double&quot;},&quot;float&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;format&quot;:&quot;float&quot;},&quot;birthDate&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;format&quot;:&quot;date-time&quot;},&quot;properties&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;additionalProperties&quot;:{&quot;type&quot;:&quot;string&quot;}},&quot;address&quot;:{&quot;$ref&quot;:&quot;Address&quot;},&quot;firstName&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;id&quot;:{&quot;type&quot;:&quot;integer&quot;,&quot;format&quot;:&quot;int64]&quot;}}}}&quot; did not equal &quot;...on&quot;:{&quot;properties&quot;:{&quot;[id&quot;:{&quot;type&quot;:&quot;integer&quot;,&quot;format&quot;:&quot;int64&quot;},&quot;firstName&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;address&quot;:{&quot;$ref&quot;:&quot;Address&quot;},&quot;properties&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;additionalProperties&quot;:{&quot;type&quot;:&quot;string&quot;}},&quot;birthDate&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;format&quot;:&quot;date-time&quot;},&quot;float&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;format&quot;:&quot;float&quot;},&quot;double&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;format&quot;:&quot;double]&quot;}}}}&quot;",1
,13
"&quot;...perties&quot; : {       &quot;[lastName&quot; : {         &quot;type&quot; : &quot;string&quot;       },       &quot;firstName&quot; : {         &quot;type&quot; : &quot;string&quot;       },       &quot;name&quot; : {         &quot;type&quot; : &quot;string&quot;,         &quot;position&quot; : 1,         &quot;description&quot; : &quot;The name of the animal&quot;       },       &quot;type&quot; : {         &quot;type&quot; : &quot;string&quot;,         &quot;position&quot; : 2,         &quot;description&quot; : &quot;The animal type]&quot;       }     },    ...&quot; did not equal &quot;...perties&quot; : {       &quot;[name&quot; : {         &quot;type&quot; : &quot;string&quot;,         &quot;position&quot; : 1,         &quot;description&quot; : &quot;The name of the animal&quot;       },       &quot;type&quot; : {         &quot;type&quot; : &quot;string&quot;,         &quot;position&quot; : 2,         &quot;description&quot; : &quot;The animal type&quot;       },       &quot;firstName&quot; : {         &quot;type&quot; : &quot;string&quot;       },       &quot;lastName&quot; : {         &quot;type&quot; : &quot;string]&quot;       }     },    ...&quot;",1
"&quot;...rties&quot; : {         &quot;[lastName&quot; : {           &quot;type&quot; : &quot;string&quot;         },         &quot;fir]stName&quot; : {         ...&quot; did not equal &quot;...rties&quot; : {         &quot;[firstName&quot; : {           &quot;type&quot; : &quot;string&quot;         },         &quot;la]stName&quot; : {         ...&quot;",1
"&quot;...ss&quot;:{&quot;properties&quot;:{&quot;[count&quot;:{&quot;type&quot;:&quot;integer&quot;,&quot;format&quot;:&quot;int32&quot;},&quot;name&quot;:{&quot;type&quot;:&quot;string]&quot;}}}}&quot; did not equal &quot;...ss&quot;:{&quot;properties&quot;:{&quot;[name&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;count&quot;:{&quot;type&quot;:&quot;integer&quot;,&quot;format&quot;:&quot;int32]&quot;}}}}&quot;",1
"&quot;...st&quot;:{&quot;properties&quot;:{&quot;[items&quot;:{&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:{&quot;type&quot;:&quot;string&quot;}},&quot;name&quot;:{&quot;type&quot;:&quot;string&quot;]}}}}&quot; did not equal &quot;...st&quot;:{&quot;properties&quot;:{&quot;[name&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;items&quot;:{&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:{&quot;type&quot;:&quot;string&quot;}]}}}}&quot;",1
&quot;[boolean]Value&quot; was not equal to &quot;[int]Value&quot;,1
"&quot;...perties&quot; : {       &quot;[age&quot; : {         &quot;type&quot; : &quot;integer&quot;,         &quot;format&quot; : &quot;int32&quot;       },       &quot;name&quot; : {         &quot;type&quot; : &quot;string&quot;       }     }   },   &quot;NestedModel&quot; : {     &quot;properties&quot; : {       &quot;localtime&quot; : {         &quot;type&quot; : &quot;string&quot;,         &quot;format&quot; : &quot;date-time&quot;       },       &quot;complexModel&quot; : {         &quot;$ref&quot; : &quot;ComplexModel]&quot;       }     }   } ...&quot; did not equal &quot;...perties&quot; : {       &quot;[name&quot; : {         &quot;type&quot; : &quot;string&quot;       },       &quot;age&quot; : {         &quot;type&quot; : &quot;integer&quot;,         &quot;format&quot; : &quot;int32&quot;       }     }   },   &quot;NestedModel&quot; : {     &quot;properties&quot; : {       &quot;complexModel&quot; : {         &quot;$ref&quot; : &quot;ComplexModel&quot;       },       &quot;localtime&quot; : {         &quot;type&quot; : &quot;string&quot;,         &quot;format&quot; : &quot;date-time]&quot;       }     }   } ...&quot;",1
"&quot;...perties&quot; : {       &quot;[firstName&quot; : {         &quot;type&quot; : &quot;string&quot;       },       &quot;lastName&quot; : {         &quot;type&quot; : &quot;string&quot;       },       &quot;name&quot; : {         &quot;type&quot; : &quot;string&quot;,         &quot;position&quot; : 1,         &quot;description&quot; : &quot;The name of the animal&quot;       },       &quot;type&quot; : {         &quot;type&quot; : &quot;string&quot;,         &quot;position&quot; : 2,         &quot;description&quot; : &quot;The animal type&quot;       }     },     &quot;discriminator&quot; : &quot;type&quot;   },   &quot;Pet&quot; : {     &quot;allOf&quot; : [ {       &quot;$ref&quot; : &quot;Human&quot;     }, {       &quot;required&quot; : [ &quot;isDomestic&quot;, &quot;name&quot;, &quot;type&quot; ],       &quot;properties&quot; : {         &quot;type&quot; : {           &quot;type&quot; : &quot;string&quot;,           &quot;position&quot; : 1,           &quot;description&quot; : &quot;The pet type&quot;         },         &quot;name&quot; : {           &quot;type&quot; : &quot;string&quot;,           &quot;position&quot; : 2,           &quot;description&quot; : &quot;The name of the pet&quot;         },]         &quot;isDomestic...&quot; did not equal &quot;...perties&quot; : {       &quot;[name&quot; : {         &quot;type&quot; : &quot;string&quot;,         &quot;position&quot; : 1,         &quot;description&quot; : &quot;The name of the animal&quot;       },       &quot;type&quot; : {         &quot;type&quot; : &quot;string&quot;,         &quot;position&quot; : 2,         &quot;description&quot; : &quot;The animal type&quot;       },       &quot;firstName&quot; : {         &quot;type&quot; : &quot;string&quot;       },       &quot;lastName&quot; : {         &quot;type&quot; : &quot;string&quot;       }     },     &quot;discriminator&quot; : &quot;type&quot;   },   &quot;Pet&quot; : {     &quot;allOf&quot; : [ {       &quot;$ref&quot; : &quot;Human&quot;     }, {       &quot;required&quot; : [ &quot;isDomestic&quot; ],       &quot;properties&quot; : {]         &quot;isDomestic...&quot;",1
"&quot;...al&quot;     }, {       &quot;[required&quot; : [ &quot;name&quot;, &quot;type&quot; ],       &quot;properties&quot; : {         &quot;firstName&quot; : {           &quot;type&quot; : &quot;string&quot;         },         &quot;lastName&quot; : {           &quot;type&quot; : &quot;string&quot;         },         &quot;name&quot; : {           &quot;type&quot; : &quot;string&quot;,           &quot;position&quot; : 1,           &quot;description&quot; : &quot;The name of the animal&quot;         },         &quot;type&quot; : {           &quot;type&quot; : &quot;string&quot;,           &quot;position&quot; : 2,           &quot;description&quot; : &quot;The animal type&quot;         }       }     } ]   },   &quot;Pet&quot; : {     &quot;allOf&quot; : [ {       &quot;$ref&quot; : &quot;Human&quot;     }, {       &quot;required&quot; : [ &quot;isDomestic&quot;, &quot;name&quot;, &quot;type&quot; ],       &quot;properties&quot; : {         &quot;type&quot; : {           &quot;type&quot; : &quot;string&quot;,           &quot;position&quot; : 1,           &quot;description&quot; : &quot;The pet type&quot;         },         &quot;name&quot; : {           &quot;type&quot; : &quot;string&quot;,           &quot;position&quot; : 2,           &quot;description&quot; : &quot;The name of the pet&quot;         },]         &quot;isDomestic...&quot; did not equal &quot;...al&quot;     }, {       &quot;[properties&quot; : {         &quot;firstName&quot; : {           &quot;type&quot; : &quot;string&quot;         },         &quot;lastName&quot; : {           &quot;type&quot; : &quot;string&quot;         }       }     } ]   },   &quot;Pet&quot; : {     &quot;allOf&quot; : [ {       &quot;$ref&quot; : &quot;Human&quot;     }, {       &quot;required&quot; : [ &quot;isDomestic&quot; ],       &quot;properties&quot; : {]         &quot;isDomestic...&quot;",1
"&quot;...    &quot;required&quot; : [ &quot;[isDomestic&quot;, &quot;name&quot;, &quot;type&quot; ],     &quot;properties&quot; : {       &quot;type&quot; : {         &quot;type&quot; : &quot;string&quot;,         &quot;position&quot; : 1,         &quot;description&quot; : &quot;The pet type&quot;       },       &quot;name&quot; : {         &quot;type&quot; : &quot;string&quot;,         &quot;position&quot; : 2,         &quot;description&quot; : &quot;The name of the pet]&quot;       },       &quot;is...&quot; did not equal &quot;...    &quot;required&quot; : [ &quot;[name&quot;, &quot;type&quot;, &quot;isDomestic&quot; ],     &quot;properties&quot; : {       &quot;name&quot; : {         &quot;type&quot; : &quot;string&quot;,         &quot;position&quot; : 2,         &quot;description&quot; : &quot;The name of the pet&quot;       },       &quot;type&quot; : {         &quot;type&quot; : &quot;string&quot;,         &quot;position&quot; : 1,         &quot;description&quot; : &quot;The pet type]&quot;       },       &quot;is...&quot;",1
"&quot;...ouble&quot;       }     }[,     &quot;subTypes&quot; : [ ]]   } }&quot; did not equal &quot;...ouble&quot;       }     }[]   } }&quot;",3
"&quot;...ormat&quot;:&quot;date-time&quot;}}[,&quot;subTypes&quot;:[]]}}&quot; did not equal &quot;...ormat&quot;:&quot;date-time&quot;}}[]}}&quot;",3
"&quot;...n&quot; : 3       }     }[,     &quot;subTypes&quot; : [ ]]   } }&quot; did not equal &quot;...n&quot; : 3       }     }[]   } }&quot;",9
"&quot;...&quot;:{&quot;type&quot;:&quot;string&quot;}}[,&quot;subTypes&quot;:[]]}}&quot; was not equal to &quot;...&quot;:{&quot;type&quot;:&quot;string&quot;}}[]}}&quot;",3
&quot;...     type: &quot;string&quot; [  subTypes: [] ]&quot; did not equal &quot;...     type: &quot;string&quot; []&quot;,3
"&quot;...&quot;:{&quot;type&quot;:&quot;string&quot;}}[,&quot;subTypes&quot;:[]]}}&quot; did not equal &quot;...&quot;:{&quot;type&quot;:&quot;string&quot;}}[]}}&quot;",3
"&quot;...&quot;,&quot;format&quot;:&quot;int32&quot;}}[,&quot;subTypes&quot;:[]]}&quot; was not equal to &quot;...&quot;,&quot;format&quot;:&quot;int32&quot;}}[]}&quot;",3
"&quot;...&quot;,&quot;format&quot;:&quot;int32&quot;}}[,&quot;subTypes&quot;:[]]}&quot; did not equal &quot;...&quot;,&quot;format&quot;:&quot;int32&quot;}}[]}&quot;",3
"&quot;...criminator&quot; : &quot;type&quot;[,     &quot;subTypes&quot; : [ ]   },   &quot;Pet&quot; : {     &quot;allOf&quot; : [ {       &quot;$ref&quot; : &quot;Human&quot;     }, {       &quot;required&quot; : [ &quot;isDomestic&quot;, &quot;name&quot;, &quot;type&quot; ],       &quot;properties&quot; : {         &quot;type&quot; : {           &quot;type&quot; : &quot;string&quot;,           &quot;position&quot; : 1,           &quot;description&quot; : &quot;The pet type&quot;         },         &quot;name&quot; : {           &quot;type&quot; : &quot;string&quot;,           &quot;position&quot; : 2,           &quot;description&quot; : &quot;The name of the pet&quot;         },         &quot;isDomestic&quot; : {           &quot;type&quot; : &quot;boolean&quot;,           &quot;position&quot; : 3         }       },       &quot;subTypes&quot; : [ ]]     } ]   } }&quot; did not equal &quot;...criminator&quot; : &quot;type&quot;[   },   &quot;Pet&quot; : {     &quot;allOf&quot; : [ {       &quot;$ref&quot; : &quot;Human&quot;     }, {       &quot;required&quot; : [ &quot;isDomestic&quot;, &quot;name&quot;, &quot;type&quot; ],       &quot;properties&quot; : {         &quot;type&quot; : {           &quot;type&quot; : &quot;string&quot;,           &quot;position&quot; : 1,           &quot;description&quot; : &quot;The pet type&quot;         },         &quot;name&quot; : {           &quot;type&quot; : &quot;string&quot;,           &quot;position&quot; : 2,           &quot;description&quot; : &quot;The name of the pet&quot;         },         &quot;isDomestic&quot; : {           &quot;type&quot; : &quot;boolean&quot;,           &quot;position&quot; : 3         }       }]     } ]   } }&quot;",1
"&quot;...perties&quot; : {       &quot;[type&quot; : {         &quot;type&quot; : &quot;string&quot;       },       &quot;name&quot; : {         &quot;type&quot; : &quot;string&quot;       }     },     &quot;discriminator&quot; : &quot;type&quot;,     &quot;subTypes&quot; : [ ]   },   &quot;Human&quot; : {     &quot;allOf&quot; : [ {       &quot;$ref&quot; : &quot;Animal&quot;     }, {       &quot;properties&quot; : {         &quot;name&quot; : {           &quot;type&quot; : &quot;string&quot;         },         &quot;type&quot; : {           &quot;type&quot; : &quot;string&quot;         },         &quot;firstName&quot; : {           &quot;type&quot; : &quot;string&quot;         },         &quot;lastName&quot; : {           &quot;type&quot; : &quot;string&quot;         }       },       &quot;subTypes&quot; : [ ]     } ]   },   &quot;Pet&quot; : {     &quot;allOf&quot; : [ {       &quot;$ref&quot; : &quot;Human&quot;     }, {       &quot;required&quot; : [ &quot;isDomestic&quot;, &quot;name&quot;, &quot;type&quot; ],       &quot;properties&quot; : {         &quot;type&quot; : {           &quot;type&quot; : &quot;string&quot;,           &quot;position&quot; : 1,           &quot;description&quot; : &quot;The pet type&quot;         },         &quot;name&quot; : {           &quot;type&quot; : &quot;string&quot;,           &quot;position&quot; : 2,           &quot;description&quot; : &quot;The name of the pet&quot;         },         &quot;isDomestic&quot; : {           &quot;type&quot; : &quot;boolean&quot;,           &quot;position&quot; : 3         }       },       &quot;subTypes&quot; : [ ]]     } ]   } }&quot; did not equal &quot;...perties&quot; : {       &quot;[name&quot; : {         &quot;type&quot; : &quot;string&quot;       },       &quot;type&quot; : {         &quot;type&quot; : &quot;string&quot;       }     },     &quot;discriminator&quot; : &quot;type&quot;   },   &quot;Human&quot; : {     &quot;allOf&quot; : [ {       &quot;$ref&quot; : &quot;Animal&quot;     }, {       &quot;properties&quot; : {         &quot;name&quot; : {           &quot;type&quot; : &quot;string&quot;         },         &quot;type&quot; : {           &quot;type&quot; : &quot;string&quot;         },         &quot;firstName&quot; : {           &quot;type&quot; : &quot;string&quot;         },         &quot;lastName&quot; : {           &quot;type&quot; : &quot;string&quot;         }       }     } ]   },   &quot;Pet&quot; : {     &quot;allOf&quot; : [ {       &quot;$ref&quot; : &quot;Human&quot;     }, {       &quot;required&quot; : [ &quot;isDomestic&quot;, &quot;name&quot;, &quot;type&quot; ],       &quot;properties&quot; : {         &quot;type&quot; : {           &quot;type&quot; : &quot;string&quot;,           &quot;position&quot; : 1,           &quot;description&quot; : &quot;The pet type&quot;         },         &quot;name&quot; : {           &quot;type&quot; : &quot;string&quot;,           &quot;position&quot; : 2,           &quot;description&quot; : &quot;The name of the pet&quot;         },         &quot;isDomestic&quot; : {           &quot;type&quot; : &quot;boolean&quot;,           &quot;position&quot; : 3         }       }]     } ]   } }&quot;",1
"&quot;...&quot;,&quot;format&quot;:&quot;int32&quot;}}[,&quot;subTypes&quot;:[]]}}&quot; did not equal &quot;...&quot;,&quot;format&quot;:&quot;int32&quot;}}[]}}&quot;",3
"&quot;...:{&quot;type&quot;:&quot;string&quot;}}}[,&quot;subTypes&quot;:[]]}}&quot; did not equal &quot;...:{&quot;type&quot;:&quot;string&quot;}}}[]}}&quot;",3
"&quot;...:{&quot;type&quot;:&quot;boolean&quot;}}[,&quot;subTypes&quot;:[]]}}&quot; did not equal &quot;...:{&quot;type&quot;:&quot;boolean&quot;}}[]}}&quot;",3
"&quot;...int32&quot;       }     }[,     &quot;subTypes&quot; : [ ]   },   &quot;NestedModel&quot; : {     &quot;properties&quot; : {       &quot;complexModel&quot; : {         &quot;$ref&quot; : &quot;ComplexModel&quot;       },       &quot;localtime&quot; : {         &quot;type&quot; : &quot;string&quot;,         &quot;format&quot; : &quot;date-time&quot;       }     },     &quot;subTypes&quot; : [ ]]   } }&quot; did not equal &quot;...int32&quot;       }     }[   },   &quot;NestedModel&quot; : {     &quot;properties&quot; : {       &quot;complexModel&quot; : {         &quot;$ref&quot; : &quot;ComplexModel&quot;       },       &quot;localtime&quot; : {         &quot;type&quot; : &quot;string&quot;,         &quot;format&quot; : &quot;date-time&quot;       }     }]   } }&quot;",1
"&quot;{&quot;[]required&quot;:false,&quot;typ...&quot; was not equal to &quot;{&quot;[in&quot;:&quot;query&quot;,&quot;]required&quot;:false,&quot;typ...&quot;",2
"&quot;{&quot;[]required&quot;:false,&quot;typ...&quot; did not equal &quot;{&quot;[in&quot;:&quot;query&quot;,&quot;]required&quot;:false,&quot;typ...&quot;",2
"&quot;{&quot;[]required&quot;:true,&quot;type...&quot; was not equal to &quot;{&quot;[in&quot;:&quot;path&quot;,&quot;]required&quot;:true,&quot;type...&quot;",3
"&quot;{&quot;[]required&quot;:true,&quot;type...&quot; did not equal &quot;{&quot;[in&quot;:&quot;query&quot;,&quot;]required&quot;:true,&quot;type...&quot;",1
"&quot;{&quot;[]required&quot;:true,&quot;type...&quot; did not equal &quot;{&quot;[in&quot;:&quot;path&quot;,&quot;]required&quot;:true,&quot;type...&quot;",2
"&quot;{&quot;[]required&quot;:false,&quot;typ...&quot; was not equal to &quot;{&quot;[in&quot;:&quot;header&quot;,&quot;]required&quot;:false,&quot;typ...&quot;",2
"&quot;{&quot;[]required&quot;:true,&quot;type...&quot; did not equal &quot;{&quot;[in&quot;:&quot;header&quot;,&quot;]required&quot;:true,&quot;type...&quot;",2
"&quot;{&quot;[]required&quot;:false,&quot;sch...&quot; was not equal to &quot;{&quot;[in&quot;:&quot;body&quot;,&quot;]required&quot;:false,&quot;sch...&quot;",3
&quot;---[] required: false sch...&quot; did not equal &quot;---[ !&lt;body&gt;] required: false sch...&quot;,1
"&quot;{&quot;[]required&quot;:false,&quot;sch...&quot; did not equal &quot;{&quot;[in&quot;:&quot;body&quot;,&quot;]required&quot;:false,&quot;sch...&quot;",3
(was java.lang.NullPointerException) (through reference chain: com.wordnik.swagger.models.Swagger[&quot;parameters&quot;]),2
"Can not construct instance of com.wordnik.swagger.models.auth.SecuritySchemeDefinition, problem: abstract types either need to be mapped to concrete types, have custom deserializer, or be instantiated with additional type information  at [Source: {&quot;swagger&quot;:&quot;2.0&quot;,&quot;info&quot;:{&quot;version&quot;:&quot;1.0.0&quot;,&quot;title&quot;:&quot;Swagger Petstore&quot;,&quot;contact&quot;:{&quot;name&quot;:&quot;Wordnik API Team&quot;,&quot;url&quot;:&quot;http://swagger.io&quot;,&quot;email&quot;:&quot;foo@bar.baz&quot;}},&quot;host&quot;:&quot;petstore.swagger.wordnik.com&quot;,&quot;schemes&quot;:[&quot;http&quot;],&quot;consumes&quot;:[&quot;application/json&quot;],&quot;produces&quot;:[&quot;application/json&quot;],&quot;paths&quot;:{&quot;/pets&quot;:{&quot;get&quot;:{&quot;tags&quot;:[&quot;Pet Operations&quot;],&quot;summary&quot;:&quot;finds pets in the system&quot;,&quot;description&quot;:&quot;a longer description&quot;,&quot;operationId&quot;:&quot;get pet by id&quot;,&quot;produces&quot;:[&quot;application/json&quot;],&quot;parameters&quot;:[{&quot;name&quot;:&quot;tags&quot;,&quot;in&quot;:&quot;query&quot;,&quot;description&quot;:&quot;tags to filter by&quot;,&quot;required&quot;:false,&quot;type&quot;:&quot;string&quot;},{&quot;name&quot;:&quot;petId&quot;,&quot;in&quot;:&quot;path&quot;,&quot;description&quot;:&quot;pet to fetch&quot;,&quot;required&quot;:true,&quot;type&quot;:&quot;integer&quot;,&quot;format&quot;:&quot;int64&quot;}],&quot;responses&quot;:{&quot;200&quot;:{&quot;description&quot;:&quot;pets returned&quot;,&quot;schema&quot;:{&quot;$ref&quot;:&quot;#/definitions/Person&quot;},&quot;examples&quot;:{&quot;application/json&quot;:&quot;fun!&quot;}},&quot;default&quot;:{&quot;description&quot;:&quot;error response&quot;,&quot;schema&quot;:{&quot;$ref&quot;:&quot;#/definitions/Error&quot;}}}},&quot;post&quot;:{&quot;tags&quot;:[&quot;Pet Operations&quot;],&quot;summary&quot;:&quot;adds a new pet&quot;,&quot;description&quot;:&quot;you can add a new pet this way&quot;,&quot;operationId&quot;:&quot;add pet&quot;,&quot;parameters&quot;:[{&quot;in&quot;:&quot;body&quot;,&quot;description&quot;:&quot;the pet to add&quot;,&quot;required&quot;:false,&quot;schema&quot;:{&quot;$ref&quot;:&quot;#/definitions/Person&quot;}}],&quot;responses&quot;:{&quot;default&quot;:{&quot;description&quot;:&quot;error response&quot;,&quot;schema&quot;:{&quot;$ref&quot;:&quot;#/definitions/Error&quot;}}}}}},&quot;securityDefinitions&quot;:{&quot;api-key&quot;:{&quot;type&quot;:&quot;apiKey&quot;,&quot;name&quot;:&quot;key&quot;,&quot;in&quot;:&quot;header&quot;}},&quot;definitions&quot;:{&quot;Person&quot;:{&quot;properties&quot;:{&quot;id&quot;:{&quot;type&quot;:&quot;integer&quot;,&quot;format&quot;:&quot;int64&quot;},&quot;firstName&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;address&quot;:{&quot;$ref&quot;:&quot;Address&quot;},&quot;properties&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;additionalProperties&quot;:{&quot;type&quot;:&quot;string&quot;}},&quot;birthDate&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;format&quot;:&quot;date-time&quot;},&quot;float&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;format&quot;:&quot;float&quot;},&quot;double&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;format&quot;:&quot;double&quot;}}}}}; line: 1, column: 1274] (through reference chain: com.wordnik.swagger.models.Swagger[&quot;securityDefinitions&quot;])",1
"&quot;...e,&quot;schema&quot;:{&quot;$ref&quot;:&quot;[#/definitions/]Cat&quot;}}&quot; was not equal to &quot;...e,&quot;schema&quot;:{&quot;$ref&quot;:&quot;[]Cat&quot;}}&quot;",3
"&quot;...e,&quot;schema&quot;:{&quot;$ref&quot;:&quot;[#/definitions/]Cat&quot;}}&quot; did not equal &quot;...e,&quot;schema&quot;:{&quot;$ref&quot;:&quot;[]Cat&quot;}}&quot;",3
"&quot;...[ {       &quot;$ref&quot; : &quot;[#/definitions/]Human&quot;     }, {     ...&quot; did not equal &quot;...[ {       &quot;$ref&quot; : &quot;[]Human&quot;     }, {     ...&quot;",3
"&quot;...perties&quot; : {       &quot;[type&quot; : {         &quot;type&quot; : &quot;string&quot;       },       &quot;name&quot; : {         &quot;type&quot; : &quot;string&quot;       }     },     &quot;discriminator&quot; : &quot;type&quot;   },   &quot;Human&quot; : {     &quot;allOf&quot; : [ {       &quot;$ref&quot; : &quot;#/definitions/Animal&quot;     }, {       &quot;properties&quot; : {         &quot;name&quot; : {           &quot;type&quot; : &quot;string&quot;         },         &quot;type&quot; : {           &quot;type&quot; : &quot;string&quot;         },         &quot;firstName&quot; : {           &quot;type&quot; : &quot;string&quot;         },         &quot;lastName&quot; : {           &quot;type&quot; : &quot;string&quot;         }       }     } ]   },   &quot;Pet&quot; : {     &quot;allOf&quot; : [ {       &quot;$ref&quot; : &quot;#/definitions/]Animal&quot;     }, {    ...&quot; did not equal &quot;...perties&quot; : {       &quot;[name&quot; : {         &quot;type&quot; : &quot;string&quot;       },       &quot;type&quot; : {         &quot;type&quot; : &quot;string&quot;       }     },     &quot;discriminator&quot; : &quot;type&quot;   },   &quot;Human&quot; : {     &quot;allOf&quot; : [ {       &quot;$ref&quot; : &quot;Animal&quot;     }, {       &quot;properties&quot; : {         &quot;name&quot; : {           &quot;type&quot; : &quot;string&quot;         },         &quot;type&quot; : {           &quot;type&quot; : &quot;string&quot;         },         &quot;firstName&quot; : {           &quot;type&quot; : &quot;string&quot;         },         &quot;lastName&quot; : {           &quot;type&quot; : &quot;string&quot;         }       }     } ]   },   &quot;Pet&quot; : {     &quot;allOf&quot; : [ {       &quot;$ref&quot; : &quot;]Animal&quot;     }, {    ...&quot;",3
"&quot;...{         &quot;$ref&quot; : &quot;[#/definitions/]Address&quot;       },   ...&quot; did not equal &quot;...{         &quot;$ref&quot; : &quot;[]Address&quot;       },   ...&quot;",1
&quot;{&quot;$ref&quot;:&quot;[#/definitions/]Dog&quot;}&quot; was not equal to &quot;{&quot;$ref&quot;:&quot;[]Dog&quot;}&quot;,1
&quot;{&quot;$ref&quot;:&quot;[#/definitions/]Dog&quot;}&quot; did not equal &quot;{&quot;$ref&quot;:&quot;[]Dog&quot;}&quot;,1
"&quot;...y&quot;,&quot;items&quot;:{&quot;$ref&quot;:&quot;[#/definitions/]Cat&quot;}}}&quot; was not equal to &quot;...y&quot;,&quot;items&quot;:{&quot;$ref&quot;:&quot;[]Cat&quot;}}}&quot;",1
"&quot;...y&quot;,&quot;items&quot;:{&quot;$ref&quot;:&quot;[#/definitions/]Cat&quot;}}}&quot; did not equal &quot;...y&quot;,&quot;items&quot;:{&quot;$ref&quot;:&quot;[]Cat&quot;}}}&quot;",1
"&quot;...y&quot;,&quot;items&quot;:{&quot;$ref&quot;:&quot;[#/definitions/]Pet&quot;}}&quot; was not equal to &quot;...y&quot;,&quot;items&quot;:{&quot;$ref&quot;:&quot;[]Pet&quot;}}&quot;",1
"&quot;...y&quot;,&quot;items&quot;:{&quot;$ref&quot;:&quot;[#/definitions/]Pet&quot;}}&quot; did not equal &quot;...y&quot;,&quot;items&quot;:{&quot;$ref&quot;:&quot;[]Pet&quot;}}&quot;",1
"&quot;...y&quot;,&quot;items&quot;:{&quot;$ref&quot;:&quot;[#/definitions/]Object&quot;}},&quot;setValue&quot;...&quot; did not equal &quot;...y&quot;,&quot;items&quot;:{&quot;$ref&quot;:&quot;[]Object&quot;}},&quot;setValue&quot;...&quot;",1
&quot;...{         &quot;$ref&quot; : &quot;[#/definitions/]ComplexModel&quot;       ...&quot; did not equal &quot;...{         &quot;$ref&quot; : &quot;[]ComplexModel&quot;       ...&quot;,1
&quot;[gettersAndHaters]&quot; was not equal to &quot;[is_persistent]&quot;,18
"&quot;...criminator&quot; : &quot;type&quot;[,     &quot;subTypes&quot; : [ ]   },   &quot;Pet&quot; : {     &quot;allOf&quot; : [ {       &quot;$ref&quot; : &quot;#/definitions/Human&quot;     }, {       &quot;required&quot; : [ &quot;isDomestic&quot;, &quot;name&quot;, &quot;type&quot; ],       &quot;properties&quot; : {         &quot;type&quot; : {           &quot;type&quot; : &quot;string&quot;,           &quot;position&quot; : 1,           &quot;description&quot; : &quot;The pet type&quot;         },         &quot;name&quot; : {           &quot;type&quot; : &quot;string&quot;,           &quot;position&quot; : 2,           &quot;description&quot; : &quot;The name of the pet&quot;         },         &quot;isDomestic&quot; : {           &quot;type&quot; : &quot;boolean&quot;,           &quot;position&quot; : 3         }       },       &quot;subTypes&quot; : [ ]]     } ]   } }&quot; did not equal &quot;...criminator&quot; : &quot;type&quot;[   },   &quot;Pet&quot; : {     &quot;allOf&quot; : [ {       &quot;$ref&quot; : &quot;#/definitions/Human&quot;     }, {       &quot;required&quot; : [ &quot;isDomestic&quot;, &quot;name&quot;, &quot;type&quot; ],       &quot;properties&quot; : {         &quot;type&quot; : {           &quot;type&quot; : &quot;string&quot;,           &quot;position&quot; : 1,           &quot;description&quot; : &quot;The pet type&quot;         },         &quot;name&quot; : {           &quot;type&quot; : &quot;string&quot;,           &quot;position&quot; : 2,           &quot;description&quot; : &quot;The name of the pet&quot;         },         &quot;isDomestic&quot; : {           &quot;type&quot; : &quot;boolean&quot;,           &quot;position&quot; : 3         }       }]     } ]   } }&quot;",2
"&quot;...criminator&quot; : &quot;type&quot;[,     &quot;subTypes&quot; : [ ]   },   &quot;Human&quot; : {     &quot;allOf&quot; : [ {       &quot;$ref&quot; : &quot;#/definitions/Animal&quot;     }, {       &quot;properties&quot; : {         &quot;name&quot; : {           &quot;type&quot; : &quot;string&quot;         },         &quot;type&quot; : {           &quot;type&quot; : &quot;string&quot;         },         &quot;firstName&quot; : {           &quot;type&quot; : &quot;string&quot;         },         &quot;lastName&quot; : {           &quot;type&quot; : &quot;string&quot;         }       },       &quot;subTypes&quot; : [ ]     } ]   },   &quot;Pet&quot; : {     &quot;allOf&quot; : [ {       &quot;$ref&quot; : &quot;#/definitions/Animal&quot;     }, {       &quot;required&quot; : [ &quot;isDomestic&quot;, &quot;name&quot;, &quot;type&quot; ],       &quot;properties&quot; : {         &quot;type&quot; : {           &quot;type&quot; : &quot;string&quot;,           &quot;position&quot; : 1,           &quot;description&quot; : &quot;The pet type&quot;         },         &quot;name&quot; : {           &quot;type&quot; : &quot;string&quot;,           &quot;position&quot; : 2,           &quot;description&quot; : &quot;The name of the pet&quot;         },         &quot;isDomestic&quot; : {           &quot;type&quot; : &quot;boolean&quot;,           &quot;position&quot; : 3         }       },       &quot;subTypes&quot; : [ ]]     } ]   } }&quot; did not equal &quot;...criminator&quot; : &quot;type&quot;[   },   &quot;Human&quot; : {     &quot;allOf&quot; : [ {       &quot;$ref&quot; : &quot;#/definitions/Animal&quot;     }, {       &quot;properties&quot; : {         &quot;name&quot; : {           &quot;type&quot; : &quot;string&quot;         },         &quot;type&quot; : {           &quot;type&quot; : &quot;string&quot;         },         &quot;firstName&quot; : {           &quot;type&quot; : &quot;string&quot;         },         &quot;lastName&quot; : {           &quot;type&quot; : &quot;string&quot;         }       }     } ]   },   &quot;Pet&quot; : {     &quot;allOf&quot; : [ {       &quot;$ref&quot; : &quot;#/definitions/Animal&quot;     }, {       &quot;required&quot; : [ &quot;isDomestic&quot;, &quot;name&quot;, &quot;type&quot; ],       &quot;properties&quot; : {         &quot;type&quot; : {           &quot;type&quot; : &quot;string&quot;,           &quot;position&quot; : 1,           &quot;description&quot; : &quot;The pet type&quot;         },         &quot;name&quot; : {           &quot;type&quot; : &quot;string&quot;,           &quot;position&quot; : 2,           &quot;description&quot; : &quot;The name of the pet&quot;         },         &quot;isDomestic&quot; : {           &quot;type&quot; : &quot;boolean&quot;,           &quot;position&quot; : 3         }       }]     } ]   } }&quot;",1
"&quot;...int32&quot;       }     }[,     &quot;subTypes&quot; : [ ]   },   &quot;NestedModel&quot; : {     &quot;properties&quot; : {       &quot;complexModel&quot; : {         &quot;$ref&quot; : &quot;#/definitions/ComplexModel&quot;       },       &quot;localtime&quot; : {         &quot;type&quot; : &quot;string&quot;,         &quot;format&quot; : &quot;date-time&quot;       }     },     &quot;subTypes&quot; : [ ]]   } }&quot; did not equal &quot;...int32&quot;       }     }[   },   &quot;NestedModel&quot; : {     &quot;properties&quot; : {       &quot;complexModel&quot; : {         &quot;$ref&quot; : &quot;#/definitions/ComplexModel&quot;       },       &quot;localtime&quot; : {         &quot;type&quot; : &quot;string&quot;,         &quot;format&quot; : &quot;date-time&quot;       }     }]   } }&quot;",2
"&quot;...perties&quot; : {       &quot;[type&quot; : {         &quot;type&quot; : &quot;string&quot;       },       &quot;name&quot; : {         &quot;type&quot; : &quot;string&quot;       }     },     &quot;discriminator&quot; : &quot;type&quot;,     &quot;subTypes&quot; : [ ]   },   &quot;Human&quot; : {     &quot;allOf&quot; : [ {       &quot;$ref&quot; : &quot;#/definitions/Animal&quot;     }, {       &quot;properties&quot; : {         &quot;name&quot; : {           &quot;type&quot; : &quot;string&quot;         },         &quot;type&quot; : {           &quot;type&quot; : &quot;string&quot;         },         &quot;firstName&quot; : {           &quot;type&quot; : &quot;string&quot;         },         &quot;lastName&quot; : {           &quot;type&quot; : &quot;string&quot;         }       },       &quot;subTypes&quot; : [ ]     } ]   },   &quot;Pet&quot; : {     &quot;allOf&quot; : [ {       &quot;$ref&quot; : &quot;#/definitions/Animal&quot;     }, {       &quot;required&quot; : [ &quot;isDomestic&quot;, &quot;name&quot;, &quot;type&quot; ],       &quot;properties&quot; : {         &quot;type&quot; : {           &quot;type&quot; : &quot;string&quot;,           &quot;position&quot; : 1,           &quot;description&quot; : &quot;The pet type&quot;         },         &quot;name&quot; : {           &quot;type&quot; : &quot;string&quot;,           &quot;position&quot; : 2,           &quot;description&quot; : &quot;The name of the pet&quot;         },         &quot;isDomestic&quot; : {           &quot;type&quot; : &quot;boolean&quot;,           &quot;position&quot; : 3         }       },       &quot;subTypes&quot; : [ ]]     } ]   } }&quot; did not equal &quot;...perties&quot; : {       &quot;[name&quot; : {         &quot;type&quot; : &quot;string&quot;       },       &quot;type&quot; : {         &quot;type&quot; : &quot;string&quot;       }     },     &quot;discriminator&quot; : &quot;type&quot;   },   &quot;Human&quot; : {     &quot;allOf&quot; : [ {       &quot;$ref&quot; : &quot;#/definitions/Animal&quot;     }, {       &quot;properties&quot; : {         &quot;name&quot; : {           &quot;type&quot; : &quot;string&quot;         },         &quot;type&quot; : {           &quot;type&quot; : &quot;string&quot;         },         &quot;firstName&quot; : {           &quot;type&quot; : &quot;string&quot;         },         &quot;lastName&quot; : {           &quot;type&quot; : &quot;string&quot;         }       }     } ]   },   &quot;Pet&quot; : {     &quot;allOf&quot; : [ {       &quot;$ref&quot; : &quot;#/definitions/Animal&quot;     }, {       &quot;required&quot; : [ &quot;isDomestic&quot;, &quot;name&quot;, &quot;type&quot; ],       &quot;properties&quot; : {         &quot;type&quot; : {           &quot;type&quot; : &quot;string&quot;,           &quot;position&quot; : 1,           &quot;description&quot; : &quot;The pet type&quot;         },         &quot;name&quot; : {           &quot;type&quot; : &quot;string&quot;,           &quot;position&quot; : 2,           &quot;description&quot; : &quot;The name of the pet&quot;         },         &quot;isDomestic&quot; : {           &quot;type&quot; : &quot;boolean&quot;,           &quot;position&quot; : 3         }       }]     } ]   } }&quot;",1
"&quot;...&quot; : &quot;array&quot;,       &quot;[]items&quot; : {         &quot;...&quot; was not equal to &quot;...&quot; : &quot;array&quot;,       &quot;[uniqueItems&quot; : true,       &quot;]items&quot; : {         &quot;...&quot;",1
"&quot;...e&quot;:{&quot;type&quot;:&quot;array&quot;,&quot;[uniqueItems&quot;:true,&quot;]items&quot;:{&quot;type&quot;:&quot;stri...&quot; did not equal &quot;...e&quot;:{&quot;type&quot;:&quot;array&quot;,&quot;[]items&quot;:{&quot;type&quot;:&quot;stri...&quot;",2
"&quot;...ems&quot; : {           &quot;[type&quot; : &quot;object&quot;         }       },       &quot;intOpt&quot; : {         &quot;type&quot; : &quot;array&quot;,         &quot;description&quot; : &quot;Integer in an Option Box&quot;,         &quot;items&quot; : {           &quot;type&quot; : &quot;o]bject&quot;         }    ...&quot; did not equal &quot;...ems&quot; : {           &quot;[$ref&quot; : &quot;#/definitions/Object&quot;         }       },       &quot;intOpt&quot; : {         &quot;type&quot; : &quot;array&quot;,         &quot;description&quot; : &quot;Integer in an Option Box&quot;,         &quot;items&quot; : {           &quot;$ref&quot; : &quot;#/definitions/O]bject&quot;         }    ...&quot;",4
"&quot;...&quot;:&quot;array&quot;,&quot;items&quot;:{&quot;[type&quot;:&quot;object&quot;}},&quot;setValue&quot;:{&quot;type&quot;:&quot;array&quot;,&quot;uniqueItems&quot;:true],&quot;items&quot;:{&quot;type&quot;:&quot;st...&quot; did not equal &quot;...&quot;:&quot;array&quot;,&quot;items&quot;:{&quot;[$ref&quot;:&quot;#/definitions/Object&quot;}},&quot;setValue&quot;:{&quot;type&quot;:&quot;array&quot;],&quot;items&quot;:{&quot;type&quot;:&quot;st...&quot;",2
"&quot;...          &quot;type&quot; : &quot;[integer&quot;,           &quot;format&quot; : &quot;int32&quot;         }       },       &quot;intOpt&quot; : {         &quot;type&quot; : &quot;integer&quot;,         &quot;format&quot; : &quot;int32&quot;,         &quot;description&quot; : &quot;Integer in an Option Box&quot;]       },       &quot;jus...&quot; did not equal &quot;...          &quot;type&quot; : &quot;[object&quot;         }       },       &quot;intOpt&quot; : {         &quot;type&quot; : &quot;array&quot;,         &quot;description&quot; : &quot;Integer in an Option Box&quot;,         &quot;items&quot; : {           &quot;type&quot; : &quot;object&quot;         }]       },       &quot;jus...&quot;",1
&quot;...f&quot; : &quot;#/definitions/[]foo&quot;         } ]    ...&quot; did not equal &quot;...f&quot; : &quot;#/definitions/[#/definitions/]foo&quot;         } ]    ...&quot;,2
"Index: 0, Size: 0",2
Serialized object does not equal expected serialized string&quot;,8
"&quot;{&quot;type&quot;:&quot;boolean&quot;[,&quot;default&quot;:false]}&quot; did not equal &quot;{&quot;type&quot;:&quot;boolean&quot;[]}&quot;",2
Duplicate test name: should verify top-level path params per #1085,1
Conflicting setter definitions for property &quot;config&quot;: com.fasterxml.jackson.databind.ObjectMapper#setConfig(1 params) vs com.fasterxml.jackson.databind.ObjectMapper#setConfig(1 params),1
2 was not equal to 1,1
Unrecognized Type: [null],2
"Serialized object: {&quot;Bar&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;foo&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;SnakeCaseModel&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;bar&quot;:{&quot;$ref&quot;:&quot;#/definitions/bar&quot;},&quot;title&quot;:{&quot;type&quot;:&quot;string&quot;}},&quot;xml&quot;:{&quot;name&quot;:&quot;snakeCaseModel&quot;}},&quot;bar&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;foo&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;snake_case_model&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;bar&quot;:{&quot;$ref&quot;:&quot;#/definitions/bar&quot;},&quot;title&quot;:{&quot;type&quot;:&quot;string&quot;}},&quot;xml&quot;:{&quot;name&quot;:&quot;snakeCaseModel&quot;}}} does not equal expected serialized string: {&quot;bar&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;foo&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;snake_case_model&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;bar&quot;:{&quot;$ref&quot;:&quot;#/definitions/bar&quot;},&quot;title&quot;:{&quot;type&quot;:&quot;string&quot;}},&quot;xml&quot;:{&quot;name&quot;:&quot;snakeCaseModel&quot;}}}&quot;",1
"Set(&quot;Array&quot;, &quot;Tag&quot;) was not equal to Set(&quot;Tag&quot;)",1
"Set(&quot;List&quot;, &quot;Tag&quot;, &quot;Map&quot;) was not equal to Set(&quot;Tag&quot;)",1
[HTTPS] did not equal null,2
&quot;get[AllEmployees]&quot; was not equal to &quot;get[Test]&quot;,2
Not implemented (through reference chain: io.swagger.models.Swagger[&quot;paths&quot;]-&gt;java.util.LinkedHashMap[&quot;/health&quot;]-&gt;io.swagger.models.RefPath[&quot;empty&quot;]),1
